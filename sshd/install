#!/bin/bash
shopt -s nullglob
if [[ ! $DB_1_ENV_MYSQL_PASSWORD ]]; then
    cat << 'TEXT'
Please link the MySQL service and data volume containers.

For example:

    docker run --rm --link magento_db_1:db_1 \
               --volumes-from magento_data_1 \
               --volume /path/to/magento.tar:/magento.tar
               "$(docker build . | xargs | awk '{print $NF}')"
TEXT
    exit 1
fi >&2
cd /srv/magento && {
    mysql() {
        command mysql -h db_1 -u "$DB_1_ENV_MYSQL_USER" --password="${DB_1_ENV_MYSQL_PASSWORD}" "$DB_1_ENV_MYSQL_DATABASE" "$@"
    }
    for tar in /*.tar; do
        # You can do this more directly with cat /*.tar,
        # but then tar can't detect the compression.
        tar --strip-components=1 -xf "$tar"
    done
    # Cat /dev/null to prevent hanging when no sql files exist.
    cat *.sql /dev/null | mysql
    php install.php \
        --admin_email admin@example.com \
        --admin_firstname ad \
        --admin_lastname min \
        --admin_password testing123 \
        --admin_username admin \
        --db_host db_1 \
        --db_name "$DB_1_ENV_MYSQL_DATABASE" \
        --db_pass "$DB_1_ENV_MYSQL_PASSWORD" \
        --db_user "$DB_1_ENV_MYSQL_USER" \
        --default_currency USD \
        --license_agreement_accepted yes \
        --locale en_US \
        --secure_base_url "http://${MAGENTO_HOST-example.com}/" \
        --skip_url_validation yes \
        --timezone America/New_York \
        --url "http://${MAGENTO_HOST-example.com}/" \
        --use_rewrites yes \
        --use_secure no \
        --use_secure_admin no
    chown -R :www-data media var
    chmod -R g+sw media var
    if [[ ! $MAGENTO_HOST ]]; then
        # No base url was specified, so disable redirecting to base url.
        mysql -e 'DELETE FROM core_config_data WHERE path LIKE "web/%secure/base_url"\g'
        n98-magerun cache:disable config
    fi
}
